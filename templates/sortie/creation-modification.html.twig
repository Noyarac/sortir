{% extends 'base.html.twig' %}

{% block title %} Création d'une sortie | {{parent()}} {% endblock %}

{% block body %}
	<div class="container">
        {% if isModification %}
            <h3>Modifier une sortie</h3>
        {% else %}
            <h3>Créer une sortie</h3>
        {% endif %}

        {{ form_start(sortieForm) }}

        <div class="row">
            <div class="col-md-6">
                {{ form_row(sortieForm.nom) }}
                {{ form_row(sortieForm.dateHeureDebut) }}
                {{ form_row(sortieForm.dateLimiteInscription) }}
                {{ form_row(sortieForm.nbInscriptionMax) }}
                {{ form_row(sortieForm.duree) }}
            </div>
            <div class="col-md-6">
                {{ form_row(sortieForm.campus) }}
                {{ form_row(sortieForm.ville) }}
                {{ form_row(sortieForm.lieu) }}
                {{ form_row(sortieForm.codePostal) }}
                {{ form_row(sortieForm.rue) }}
                <div class="row">
                    <div class="col-md-6">
                        {{ form_row(sortieForm.latitude) }}
                    </div>
                    <div class="col-md-6">
                        {{ form_row(sortieForm.longitude) }}
                    </div>
                </div>
            </div>
            {{ form_row(sortieForm.infosSortie) }}
        </div>

        <div class="mt-3 d-flex gap-2 align-items-center">

            {# Boutons du formulaire principal #}
            <button type="submit" name="action" value="en_creation" class="btn btn-primary">Enregistrer</button>
            <button type="submit" name="action" value="ouverte" class="btn btn-success">Publier</button>
            <a href="{{ path('main_home') }}" class="btn btn-secondary">Retour à la liste</a>

            {{ form_end(sortieForm) }}

            {# Formulaire suppression : form séparé, affiché inline #}
            {% if isModification and is_granted('sortie_modification', sortie) %}
                <form method="post"
                      action="{{ path('sortie_suppression', {'id': sortie.id}) }}"
                      onsubmit="return confirm('Êtes-vous sûr de vouloir supprimer cette sortie ?');"
                      class="d-inline m-0 p-0"
                >
                    <input type="hidden" name="_token" value="{{ csrf_token('suppression_sortie_' ~ sortie.id) }}">
                    <button type="submit" class="btn btn-danger">Supprimer</button>
                </form>
            {% endif %}

        </div>
    </div>

    <script>
        document.addEventListener('turbo:load', init);
        document.addEventListener('turbo:render', init);

        function init() {
            const villeSelect = document.getElementById('{{ sortieForm.ville.vars.id }}')
            const lieuSelect = document.getElementById('{{ sortieForm.lieu.vars.id }}');

            if(villeSelect.value){
                const selectedLieuId = '{{ sortie.lieu ? sortie.lieu.id : '' }}'
                chargerLieuxEnFonctionDeVille(villeSelect.value, selectedLieuId);
            }

            if (lieuSelect.value) {
                chargerDonneesLieu(lieuSelect.value);
            }

            function chargerLieuxEnFonctionDeVille(villeId, selectedLieuId = null){
                if(!villeId){
                    fetch(`/lieu`)
                        .then(response=>response.json())
                        .then( lieux => chargerDonneesSelectLieu(lieux, selectedLieuId));
                    return;
                }
                fetch(`/lieu/ville/${villeId}`)
                    .then(response=> response.json())
                    .then( lieux => chargerDonneesSelectLieu(lieux, selectedLieuId));
            }

            function chargerDonneesSelectLieu(lieux, selectedLieuId = null){
                lieuSelect.innerHTML = '<option value="">Choisissez un lieu</option>';

                lieux.forEach(lieu => {
                    const option = document.createElement('option');
                    option.value = lieu.id;
                    option.textContent = lieu.nom;
                    if(selectedLieuId && lieu.id == selectedLieuId){
                        option.selected = true;
                    }
                    lieuSelect.appendChild(option);
                });
            }

            function chargerDonneesLieu(lieuId) {
                if (!lieuId) {
                    viderChampsLieux();
                    return;
                }
                fetch(`/lieu/${lieuId}`)
                    .then(response => response.json())
                    .then(data => {
                        document.getElementById('{{ sortieForm.rue.vars.id }}').value = data.rue || '';
                        document.getElementById('{{ sortieForm.codePostal.vars.id }}').value = data.codePostal || '';
                        document.getElementById('{{ sortieForm.latitude.vars.id }}').value = data.latitude || '';
                        document.getElementById('{{ sortieForm.longitude.vars.id }}').value = data.longitude || '';
                    });
            }

            function viderChampsLieux(){
                document.getElementById('{{ sortieForm.rue.vars.id }}').value = '';
                document.getElementById('{{ sortieForm.codePostal.vars.id }}').value ='';
                document.getElementById('{{ sortieForm.latitude.vars.id }}').value = '';
                document.getElementById('{{ sortieForm.longitude.vars.id }}').value = '';
            }

            villeSelect.addEventListener('change', function(){
                chargerLieuxEnFonctionDeVille(this.value);
                viderChampsLieux();
            });

            lieuSelect.addEventListener('change', function() {
                chargerDonneesLieu(this.value);
            });

        }

    </script>
{% endblock %}


